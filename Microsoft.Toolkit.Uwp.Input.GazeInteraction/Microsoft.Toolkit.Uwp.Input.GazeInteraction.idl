namespace Microsoft.Toolkit.Uwp.Input.GazeInteraction
{
	enum DwellProgressState { Idle, Fixating, Progressing, Complete };

	runtimeclass DwellProgressEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
	{
		DwellProgressEventArgs(DwellProgressState state, Windows.Foundation.TimeSpan elapsedDuration, Windows.Foundation.TimeSpan triggerDuration);
		DwellProgressState State{ get; };
		Double Progress{ get; };
		Boolean Handled;
	}

	runtimeclass DwellInvokedRoutedEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
	{
		DwellInvokedRoutedEventArgs();
		Boolean Handled;
	}

	enum PointerState { Exit = 0, PreEnter = 1, Enter = 2, Fixation = 3, Dwell = 4, DwellRepeat = 5 };

	runtimeclass StateChangedEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
	{
		StateChangedEventArgs();
		StateChangedEventArgs(Microsoft.UI.Xaml.UIElement target, PointerState state, Windows.Foundation.TimeSpan elapsedTime);
		PointerState PointerState{ get; };
		Windows.Foundation.TimeSpan ElapsedTime{ get; };
	}

	enum Interaction { Inherited, Enabled, Disabled };

	[default_interface]
	unsealed runtimeclass GazePointerProxy
	{
		GazePointerProxy();
		GazePointerProxy(Microsoft.UI.Xaml.FrameworkElement element);
		static Microsoft.UI.Xaml.DependencyProperty GazePointerProxyProperty{ get; };
		static void SetInteraction(Microsoft.UI.Xaml.FrameworkElement element, Interaction value);

		void SetIsEnabled(Object sender, Boolean value);
	}

	runtimeclass GazeEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
	{
		Boolean Handled;
		Windows.Foundation.Point Location{ get; };
		Windows.Foundation.TimeSpan Timestamp{ get; };

		void Set(Windows.Foundation.Point location, Windows.Foundation.TimeSpan timestamp);
	}

	[default_interface]
	unsealed runtimeclass GazeTargetItem
	{
		GazeTargetItem(Microsoft.UI.Xaml.UIElement target);
		
		Windows.Foundation.TimeSpan DetailedTime;
		Windows.Foundation.TimeSpan OverflowTime;
		Windows.Foundation.TimeSpan ElapsedTime{ get; };
		Windows.Foundation.TimeSpan NextStateTime;
		Windows.Foundation.TimeSpan LastTimestamp;
		PointerState ElementState;
		Microsoft.UI.Xaml.UIElement TargetElement;
		Int32 RepeatCount;
		Int32 MaxDwellRepeatCount;
		void Invoke();
		Boolean IsInvokable();
		void Reset(Windows.Foundation.TimeSpan nextStateTime);
		void GiveFeedback();

		static GazeTargetItem GetOrCreate(Microsoft.UI.Xaml.UIElement element);
		static Microsoft.UI.Xaml.DependencyProperty GazeTargetItemProperty{ get; };
	}

	[default_interface]
	unsealed runtimeclass NonInvokeGazeTargetItem : GazeTargetItem
	{
		NonInvokeGazeTargetItem();
		Boolean IsInvokable{ get; };
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass PivotItemGazeTargetItem : GazeTargetItem
	{
		PivotItemGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass TogglePatternGazeTargetItem : GazeTargetItem
	{
		TogglePatternGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass SelectionItemPatternGazeTargetItem : GazeTargetItem
	{
		SelectionItemPatternGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass ExpandCollapsePatternGazeTargetItem : GazeTargetItem
	{
		ExpandCollapsePatternGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass ComboBoxItemGazeTargetItem : GazeTargetItem
	{
		ComboBoxItemGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass InvokePatternGazeTargetItem : GazeTargetItem
	{
		InvokePatternGazeTargetItem(Microsoft.UI.Xaml.UIElement element);
		void Invoke();
	}

	[default_interface]
	unsealed runtimeclass GazeHistoryItem
	{
		GazeTargetItem HitTarget;
		Windows.Foundation.TimeSpan Timestamp;
		Windows.Foundation.TimeSpan Duration;
	}

	[default_interface]
	unsealed runtimeclass GazePointer
	{
		GazePointer();
		void LoadSettings(Windows.Foundation.Collections.ValueSet settings);
		void Click();
		Windows.Foundation.IAsyncOperation<Boolean> RequestCalibrationAsync();
		event Windows.Foundation.EventHandler<GazeEventArgs> GazeEvent;
		Microsoft.UI.Xaml.UIElement CursorElement{ get; };
		Boolean IsAlwaysActivated;
		static GazePointer Instance{ get; };
		void AddRoot(Int32 proxyId);
		void RemoveRoot(Int32 proxyId);
		Boolean IsDeviceAvailable();
		Boolean IsCursorVisible;
		Int32 CursorRadius;
		Boolean IsSwitchEnabled;
		event Windows.Foundation.EventHandler<Object> IsDeviceAvailableChanged;
	}

	[default_interface]
	unsealed runtimeclass GazeElement : Microsoft.UI.Xaml.DependencyObject
	{
		GazeElement();
		event Windows.Foundation.EventHandler<StateChangedEventArgs> StateChanged;
		event Windows.Foundation.EventHandler<DwellProgressEventArgs> DwellProgressFeedback;
		event Windows.Foundation.EventHandler<DwellInvokedRoutedEventArgs> Invoked;

		void RaiseStateChanged(Object sender, StateChangedEventArgs args);
		void RaiseInvoked(Object sender, DwellInvokedRoutedEventArgs args);
		Boolean RaiseProgressFeedback(Object sender, DwellProgressState state, Windows.Foundation.TimeSpan elapsedTime, Windows.Foundation.TimeSpan triggerTime);
	}

	[default_interface]
	unsealed runtimeclass GazeInput
	{
		static Boolean IsDeviceAvailable{ get; };

		static Microsoft.UI.Xaml.DependencyProperty InteractionProperty();
		static Microsoft.UI.Xaml.DependencyProperty IsCursorVisibleProperty();
		static Microsoft.UI.Xaml.DependencyProperty CursorRadiusProperty();
		static Microsoft.UI.Xaml.DependencyProperty GazeElementProperty();
		static Microsoft.UI.Xaml.DependencyProperty FixationDurationProperty();
		static Microsoft.UI.Xaml.DependencyProperty DwellDurationProperty();
		static Microsoft.UI.Xaml.DependencyProperty RepeatDelayDurationProperty();
		static Microsoft.UI.Xaml.DependencyProperty DwellRepeatDurationProperty();
		static Microsoft.UI.Xaml.DependencyProperty ThresholdDurationProperty();
		static Microsoft.UI.Xaml.DependencyProperty MaxDwellRepeatCountProperty();
		static Microsoft.UI.Xaml.DependencyProperty IsSwitchEnabledProperty();
		
		static Interaction Interaction;

		static Microsoft.UI.Xaml.Media.Brush DwellFeedbackEnterBrush;
		static Microsoft.UI.Xaml.Media.Brush DwellFeedbackProgressBrush;
		static Microsoft.UI.Xaml.Media.Brush DwellFeedbackCompleteBrush;
		static Double DwellStrokeThickness;

		static Interaction GetInteraction(Microsoft.UI.Xaml.UIElement element);
		static void SetInteraction(Microsoft.UI.Xaml.UIElement element, Interaction value);

		static Boolean GetIsSwitchEnabled(Microsoft.UI.Xaml.UIElement element);

		static void SetFixationDuration(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.TimeSpan span);
		static void SetDwellDuration(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.TimeSpan span);

		static GazePointer GetGazePointer(Microsoft.UI.Xaml.Controls.Page page);

		static Boolean GetIsCursorVisible(Microsoft.UI.Xaml.UIElement element);

		static Int32 GetCursorRadius(Microsoft.UI.Xaml.UIElement element);

		static event Windows.Foundation.EventHandler<Object> IsDeviceAvailableChanged;

		static GazeElement GetGazeElement(Microsoft.UI.Xaml.UIElement element);
		static Windows.Foundation.TimeSpan GetFixationDuration(Microsoft.UI.Xaml.UIElement element);
		static Windows.Foundation.TimeSpan GetDwellDuration(Microsoft.UI.Xaml.UIElement element);
		static Windows.Foundation.TimeSpan GetRepeatDelayDuration(Microsoft.UI.Xaml.UIElement element);
		static Windows.Foundation.TimeSpan GetDwellRepeatDuration(Microsoft.UI.Xaml.UIElement element);
		static Windows.Foundation.TimeSpan GetThresholdDuration(Microsoft.UI.Xaml.UIElement element);
		static Int32 GetMaxDwellRepeatCount(Microsoft.UI.Xaml.UIElement element);

		static void SetIsCursorVisible(Microsoft.UI.Xaml.UIElement element, Boolean value);
		static void SetCursorRadius(Microsoft.UI.Xaml.UIElement element, Int32 value);
		static void SetGazeElement(Microsoft.UI.Xaml.UIElement element, GazeElement value);
		static void SetRepeatDelayDuration(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.TimeSpan span);
		static void SetDwellRepeatDuration(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.TimeSpan span);
		static void SetThresholdDuration(Microsoft.UI.Xaml.UIElement element, Windows.Foundation.TimeSpan span);
		static void SetMaxDwellRepeatCount(Microsoft.UI.Xaml.UIElement element, Int32 value);
		static void SetIsSwitchEnabled(Microsoft.UI.Xaml.UIElement element, Boolean value);
	}
}